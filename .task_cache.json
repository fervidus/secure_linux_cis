{"apt":{"name":"apt","files":[{"name":"init.rb","path":"/root/test/secure_linux_cis/.modules/apt/tasks/init.rb","mtime":"2023-07-14 16:30:02 +0200"}],"metadata":{"description":"Allows you to perform apt-get functions","input_method":"stdin","parameters":{"action":{"description":"Action to perform with apt-get","type":"Enum[update, upgrade, dist-upgrade, autoremove]"}}}},"exec":{"name":"exec","files":[{"name":"init.rb","path":"/root/test/secure_linux_cis/.modules/exec/tasks/init.rb","mtime":"2023-07-14 16:29:59 +0200"},{"name":"windows.ps1","path":"/root/test/secure_linux_cis/.modules/exec/tasks/windows.ps1","mtime":"2023-07-14 16:29:59 +0200"},{"name":"linux.sh","path":"/root/test/secure_linux_cis/.modules/exec/tasks/linux.sh","mtime":"2023-07-14 16:29:59 +0200"}],"metadata":{"description":"Executes an arbitrary shell command on the target system","input_method":"stdin","parameters":{"command":{"description":"The command to run, including all arguments","type":"String[1]"},"interleave":{"description":"Interleave the stdout and stderr streams.(default: true)","type":"Optional[Variant[Boolean, Enum['true','false']]]"},"failonfail":{"description":"Should the task fail if the command exits nonzero.(default: true)","type":"Optional[Variant[Boolean, Enum['true','false']]]"}},"implementations":[{"name":"init.rb","requirements":["puppet-agent"]},{"name":"windows.ps1","requirements":["powershell"],"input_method":"powershell"},{"name":"linux.sh","requirements":["shell"],"input_method":"environment"}],"extensions":{"discovery":{"friendlyName":"Run a shell command","type":["host"]}}}},"facts":{"name":"facts","files":[{"name":"ruby.rb","path":"/root/test/secure_linux_cis/.modules/facts/tasks/ruby.rb","mtime":"2023-07-14 16:30:02 +0200"},{"name":"powershell.ps1","path":"/root/test/secure_linux_cis/.modules/facts/tasks/powershell.ps1","mtime":"2023-07-14 16:30:02 +0200"},{"name":"bash.sh","path":"/root/test/secure_linux_cis/.modules/facts/tasks/bash.sh","mtime":"2023-07-14 16:30:02 +0200"},{"name":"ruby_task_helper/files/task_helper.rb","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.27.1/modules/ruby_task_helper/files/task_helper.rb","mtime":"2023-03-13 21:15:33 +0100"}],"metadata":{"description":"Gather system facts","parameters":{},"implementations":[{"name":"ruby.rb","requirements":["puppet-agent"],"files":["ruby_task_helper/files/task_helper.rb"],"input_method":"stdin"},{"name":"powershell.ps1","requirements":["powershell"],"input_method":"environment"},{"name":"bash.sh","requirements":["shell"],"input_method":"environment"}]}},"http_request":{"name":"http_request","files":[{"name":"init.rb","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.27.1/modules/http_request/tasks/init.rb","mtime":"2023-03-13 21:15:33 +0100"},{"name":"ruby_task_helper/files/task_helper.rb","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.27.1/modules/ruby_task_helper/files/task_helper.rb","mtime":"2023-03-13 21:15:33 +0100"}],"metadata":{"description":"Make a HTTP or HTTPS request.","input_method":"stdin","parameters":{"base_url":{"description":"The fully qualified URL scheme to make requests to.","type":"String[1]"},"body":{"description":"The request body. If json_endpoint is true, must be able representable as JSON. If json_endpoint is false, must be a string.","type":"Optional[Data]"},"cacert":{"description":"An absolute path to the CA certificate.","type":"Optional[String[1]]"},"cert":{"description":"An absolute path to the client certificate.","type":"Optional[String[1]]"},"follow_redirects":{"description":"If true, automatically follows redirects.","type":"Boolean","default":true},"headers":{"description":"A map of headers to add to the payload.","type":"Optional[Hash[String, String]]"},"json_endpoint":{"description":"If true, parses the request and response bodies as JSON and sets the Content-Type header to application/json.","type":"Boolean","default":false},"key":{"description":"An absolute path to the RSA keypair.","type":"Optional[String[1]]"},"max_redirects":{"description":"The maximum number of redirects to follow when follow_redirects is true.","type":"Integer[1]","default":20},"method":{"description":"The HTTP method to use.","type":"Enum[delete, get, post, put, patch]","default":"get"},"path":{"description":"The path to append to the base_url.","type":"Optional[String[1]]"}},"files":["ruby_task_helper/files/task_helper.rb"]}},"lvm::ensure_lv":{"name":"lvm::ensure_lv","files":[{"name":"ensure_lv.rb","path":"/root/test/secure_linux_cis/.modules/lvm/tasks/ensure_lv.rb","mtime":"2023-07-14 16:29:59 +0200"}],"metadata":{"description":"Ensures settings on a logical volume using the type & provider","input_method":"stdin","parameters":{"ensure":{"description":"Present or absent","type":"Enum[present,absent]"},"name":{"description":"The name of the logical volume.  This is the unqualified name and will be automatically added to the volume group's device path (e.g., '/dev/$vg/$lv').","type":"String[1]"},"volume_group":{"description":"The volume group name associated with this logical volume","type":"Optional[String[1]]"},"size":{"description":"The size of the logical volume. Set to undef to use all available space","type":"Optional[Pattern[/^[0-9]+(\\.[0-9]+)?[KMGTPEkmgtpe]/]]"},"extents":{"description":"The number of logical extents to allocate for the new logical volume. Set to undef to use all available space","type":"Optional[Pattern[/^\\d+(%(?:vg|pvs|free|origin)?)?$/]]"},"persistent":{"description":"Set to true to make the block device persistent","type":"Optional[Boolean]"},"thinpool":{"description":"Set to true to create a thin pool or to pool name to create thin volume","type":"Optional[Boolean]"},"poolmetadatasize":{"description":"Change the size of logical volume pool metadata","type":"Optional[Pattern[/^[0-9]+(\\.[0-9]+)?[KMGTPEkmgtpe]/]]"},"minor":{"description":"Set the minor number","type":"Optional[Integer[0,255]]"},"type":{"description":"Configures the logical volume type","type":"Optional[String[1]]"},"range":{"description":"Sets the inter-physical volume allocation policy. AIX only","type":"Optional[Enum[maximum,minimum]]"},"stripes":{"description":"The number of stripes to allocate for the new logical volume","type":"Optional[Integer]"},"stripesize":{"description":"The stripesize to use for the new logical volume","type":"Optional[Integer]"},"readahead":{"description":"The readahead count to use for the new logical volume","type":"Optional[String]"},"resize_fs":{"description":"Whether or not to resize the underlying filesystem when resizing the logical volume","type":"Optional[Boolean]"},"mirror":{"description":"The number of mirrors of the volume","type":"Optional[Integer[0,4]]"},"mirrorlog":{"description":"How to store the mirror log","type":"Optional[Enum[core,disk,mirrored]]"},"alloc":{"description":"Selects the allocation policy when a command needs to allocate Physical Extents from the Volume Group","type":"Optional[Enum[anywhere,contiguous,cling,inherit,normal]]"},"no_sync":{"description":"An optimization in lvcreate, at least on Linux"},"region_size":{"description":"A mirror is divided into regions of this size (in MB), the mirror log uses this granularity to track which regions are in sync. CAN NOT BE CHANGED on already mirrored volume. Take your mirror size in terabytes and round up that number to the next power of 2, using that number as the -R argument.","type":"Optional[Integer]"}}}},"lvm::ensure_pv":{"name":"lvm::ensure_pv","files":[{"name":"ensure_pv.rb","path":"/root/test/secure_linux_cis/.modules/lvm/tasks/ensure_pv.rb","mtime":"2023-07-14 16:29:59 +0200"}],"metadata":{"description":"Ensures settings on a physical volumes using the type & provider","input_method":"stdin","parameters":{"name":{"description":"The name of the physical volume","type":"String[1]"},"ensure":{"description":"Present or absent","type":"Enum[present,absent]"},"unless_vg":{"description":"Do not do anything if the VG already exists.  The value should be the name of the volume group to check for.","type":"Optional[String]"},"force":{"description":"Force the creation without any confirmation","type":"Optional[Boolean]"}}}},"lvm::ensure_vg":{"name":"lvm::ensure_vg","files":[{"name":"ensure_vg.rb","path":"/root/test/secure_linux_cis/.modules/lvm/tasks/ensure_vg.rb","mtime":"2023-07-14 16:29:59 +0200"}],"metadata":{"description":"Ensures settings on a volume group using the type & provider","input_method":"stdin","parameters":{"name":{"description":"The name of the volume group","type":"String[1]"},"ensure":{"description":"Present or absent","type":"Enum[present,absent]"},"createonly":{"description":"If set to true the volume group will be created if it does not exist. If the volume group does exist no action will be taken","type":"Optional[Boolean]"},"followsymlinks":{"description":"If set to true all current and wanted values of the physical_volumes property will be followed to their real files on disk if they are in fact symlinks. This is useful to have Puppet determine what the actual PV device is if the property value is a symlink, like '/dev/disk/by-path/xxxx -> ../../sda'","type":"Optional[Boolean]"},"physical_volumes":{"description":"The list of physical volumes to be included in the volume group","type":"Array[String]"}}}},"lvm::extend_lv":{"name":"lvm::extend_lv","files":[{"name":"extend_lv.rb","path":"/root/test/secure_linux_cis/.modules/lvm/tasks/extend_lv.rb","mtime":"2023-07-14 16:29:59 +0200"}],"metadata":{"description":"Extends a logical volume","input_method":"stdin","parameters":{"size":{"description":"Intended size or 'full'","type":"String[1]"},"logical_volume":{"description":"Name of the logical volume to extend","type":"String[1]"},"volume_group":{"description":"Name of the volume group on which the logical volume resides","type":"String[1]"}}}},"lvm::extend_vg":{"name":"lvm::extend_vg","files":[{"name":"extend_vg.rb","path":"/root/test/secure_linux_cis/.modules/lvm/tasks/extend_vg.rb","mtime":"2023-07-14 16:29:59 +0200"}],"metadata":{"description":"Adds physical volumes to a volume group","input_method":"stdin","parameters":{"volume_group":{"description":"The name of the volume group","type":"String[1]"},"physical_volumes":{"description":"The list of physical volumes to be included in the volume group","type":"Array[String]"}}}},"lvm::mount_lv":{"name":"lvm::mount_lv","files":[{"name":"mount_lv.rb","path":"/root/test/secure_linux_cis/.modules/lvm/tasks/mount_lv.rb","mtime":"2023-07-14 16:29:59 +0200"}],"metadata":{"description":"Mounts a logical volume","input_method":"stdin","parameters":{"volume_group":{"description":"The name of the volume group","type":"String[1]"},"logical_volume":{"description":"The name of the logical_volume to mount","type":"String[1]"},"mountpoint":{"description":"Where to mount the logical volume","type":"String[1]"},"fstype":{"description":"The mount type. Valid values depend on the operating system. This is a required option.","type":"String"},"options":{"description":"A single string containing options for the mount, as they would appear in fstab on Linux. For many platforms this is a comma-delimited string","type":"Optional[String]"},"atboot":{"description":"Whether to mount the mount at boot. Not all platforms support this.","type":"Optional[Boolean]"},"owner":{"description":"Owner for the mountpoint","type":"Optional[String]"},"group":{"description":"Group for the mountpoint","type":"Optional[String]"},"mode":{"description":"Permissions for the mountpoint","type":"Optional[String]"}}}},"package":{"name":"package","files":[{"name":"init.rb","path":"/root/test/secure_linux_cis/.modules/package/tasks/init.rb","mtime":"2023-07-14 16:30:02 +0200"},{"name":"windows.ps1","path":"/root/test/secure_linux_cis/.modules/package/tasks/windows.ps1","mtime":"2023-07-14 16:30:02 +0200"},{"name":"linux.sh","path":"/root/test/secure_linux_cis/.modules/package/tasks/linux.sh","mtime":"2023-07-14 16:30:02 +0200"},{"name":"package/files/common.sh","path":"/root/test/secure_linux_cis/.modules/package/files/common.sh","mtime":"2023-07-14 16:30:02 +0200"},{"name":"package/files/apt.sh","path":"/root/test/secure_linux_cis/.modules/package/files/apt.sh","mtime":"2023-07-14 16:30:02 +0200"},{"name":"package/files/yum.sh","path":"/root/test/secure_linux_cis/.modules/package/files/yum.sh","mtime":"2023-07-14 16:30:02 +0200"},{"name":"package/files/zypper.sh","path":"/root/test/secure_linux_cis/.modules/package/files/zypper.sh","mtime":"2023-07-14 16:30:02 +0200"}],"metadata":{"description":"Manage and inspect the state of packages","input_method":"stdin","parameters":{"action":{"description":"The operation (install, status, uninstall and upgrade) to perform on the package.","type":"Enum[install, status, uninstall, upgrade]"},"name":{"description":"The name of the package to be manipulated.","type":"String[1]"},"version":{"description":"Version numbers must match the full version to install, including release if the provider uses a release moniker. Ranges or semver patterns are not accepted except for the gem package provider. For example, to install the bash package from the rpm bash-4.1.2-29.el6.x86_64.rpm, use the string '4.1.2-29.el6'.","type":"Optional[String[1]]"},"manager_options":{"description":"options to be sent to the package manager","type":"Optional[String[1]]"},"provider":{"description":"The provider to use to manage or inspect the package, defaults to the system package manager. Only used when the 'puppet-agent' feature is available on the target so we can leverage Puppet.","type":"Optional[String[1]]"}},"implementations":[{"name":"init.rb","requirements":["puppet-agent"]},{"name":"windows.ps1","requirements":["powershell"],"input_method":"powershell"},{"name":"linux.sh","requirements":["shell"],"input_method":"environment","files":["package/files/common.sh","package/files/apt.sh","package/files/yum.sh","package/files/zypper.sh"]}],"extensions":{"discovery":{"friendlyName":"Manage package","type":["package"]}}}},"pkcs7::secret_createkeys":{"name":"pkcs7::secret_createkeys","files":[{"name":"secret_createkeys.rb","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.27.1/modules/pkcs7/tasks/secret_createkeys.rb","mtime":"2023-03-13 21:15:33 +0100"},{"name":"ruby_task_helper/files/task_helper.rb","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.27.1/modules/ruby_task_helper/files/task_helper.rb","mtime":"2023-03-13 21:15:33 +0100"}],"metadata":{"description":"Create a key pair","input_method":"stdin","parameters":{"force":{"type":"Boolean","description":"Whether to overwrite an existing key pair","default":false},"keysize":{"type":"Integer","description":"The size of the key to generate","default":2048},"private_key":{"type":"String","description":"Path to the private key","default":"keys/private_key.pkcs7.pem"},"public_key":{"type":"String","description":"Path to the public key","default":"keys/public_key.pkcs7.pem"}},"files":["ruby_task_helper/files/task_helper.rb"]}},"pkcs7::secret_decrypt":{"name":"pkcs7::secret_decrypt","files":[{"name":"secret_decrypt.rb","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.27.1/modules/pkcs7/tasks/secret_decrypt.rb","mtime":"2023-03-13 21:15:33 +0100"},{"name":"ruby_task_helper/files/task_helper.rb","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.27.1/modules/ruby_task_helper/files/task_helper.rb","mtime":"2023-03-13 21:15:33 +0100"}],"metadata":{"description":"Decrypt sensitive data with pkcs7","input_method":"stdin","parameters":{"encrypted_value":{"type":"String","description":"The ciphertext to decrypt"},"private_key":{"type":"String","description":"Path to the private key","default":"keys/private_key.pkcs7.pem"},"public_key":{"type":"String","description":"Path to the public key","default":"keys/public_key.pkcs7.pem"}},"files":["ruby_task_helper/files/task_helper.rb"]}},"pkcs7::secret_encrypt":{"name":"pkcs7::secret_encrypt","files":[{"name":"secret_encrypt.rb","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.27.1/modules/pkcs7/tasks/secret_encrypt.rb","mtime":"2023-03-13 21:15:33 +0100"},{"name":"ruby_task_helper/files/task_helper.rb","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.27.1/modules/ruby_task_helper/files/task_helper.rb","mtime":"2023-03-13 21:15:33 +0100"}],"metadata":{"description":"Encrypt sensitive data with pkcs7","input_method":"stdin","parameters":{"plaintext_value":{"type":"String","description":"The plaintext to encrypt"},"public_key":{"type":"String","description":"Path to the public key","default":"keys/public_key.pkcs7.pem"}},"files":["ruby_task_helper/files/task_helper.rb"]}},"puppet_agent::delete_local_filebucket":{"name":"puppet_agent::delete_local_filebucket","files":[{"name":"delete_local_filebucket.rb","path":"/root/test/secure_linux_cis/.modules/puppet_agent/tasks/delete_local_filebucket.rb","mtime":"2023-07-14 16:30:00 +0200"},{"name":"puppet_agent/files/rb_task_helper.rb","path":"/root/test/secure_linux_cis/.modules/puppet_agent/files/rb_task_helper.rb","mtime":"2023-07-14 16:30:00 +0200"}],"metadata":{"description":"Removes the local filebucket","parameters":{"force":{"description":"ignore nonexistent files and errors","type":"Optional[Boolean]"}},"files":["puppet_agent/files/rb_task_helper.rb"]}},"puppet_agent::facts_diff":{"name":"puppet_agent::facts_diff","files":[{"name":"facts_diff.rb","path":"/root/test/secure_linux_cis/.modules/puppet_agent/tasks/facts_diff.rb","mtime":"2023-07-14 16:30:00 +0200"},{"name":"puppet_agent/files/rb_task_helper.rb","path":"/root/test/secure_linux_cis/.modules/puppet_agent/files/rb_task_helper.rb","mtime":"2023-07-14 16:30:00 +0200"}],"metadata":{"description":"Run the Puppet agent facts diff action","parameters":{"exclude":{"description":"Regex used to exclude specific facts from diff","type":"Optional[String]"}},"files":["puppet_agent/files/rb_task_helper.rb"]}},"puppet_agent::install":{"name":"puppet_agent::install","files":[{"name":"install_shell.sh","path":"/root/test/secure_linux_cis/.modules/puppet_agent/tasks/install_shell.sh","mtime":"2023-07-14 16:30:00 +0200"},{"name":"install_powershell.ps1","path":"/root/test/secure_linux_cis/.modules/puppet_agent/tasks/install_powershell.ps1","mtime":"2023-07-14 16:30:00 +0200"},{"name":"facts/tasks/bash.sh","path":"/root/test/secure_linux_cis/.modules/facts/tasks/bash.sh","mtime":"2023-07-14 16:30:02 +0200"}],"metadata":{"description":"Install the Puppet agent package","parameters":{"version":{"description":"The version of puppet-agent to install (defaults to latest when no agent is installed)","type":"Optional[String]"},"collection":{"description":"The Puppet collection to install from (defaults to puppet, which maps to the latest collection released)","type":"Optional[Enum[puppet6, puppet7, puppet, puppet6-nightly, puppet7-nightly, puppet-nightly]]"},"yum_source":{"description":"The source location to find yum repos (defaults to yum.puppet.com)","type":"Optional[String]"},"apt_source":{"description":"The source location to find apt repos (defaults to apt.puppet.com)","type":"Optional[String]"},"mac_source":{"description":"The source location to find mac packages (defaults to downloads.puppet.com)","type":"Optional[String]"},"windows_source":{"description":"The source location to find windows packages (defaults to downloads.puppet.com)","type":"Optional[String]"},"install_options":{"description":"optional install arguments to the windows installer (defaults to REINSTALLMODE=\"amus\")","type":"Optional[String]"},"stop_service":{"description":"Whether to stop the puppet agent service after install","type":"Optional[Boolean]"},"retry":{"description":"The number of retries in case of network connectivity failures","type":"Optional[Integer]","default":5}},"implementations":[{"name":"install_shell.sh","requirements":["shell"],"files":["facts/tasks/bash.sh"],"input_method":"environment"},{"name":"install_powershell.ps1","requirements":["powershell"]}],"supports_noop":true}},"puppet_agent::version":{"name":"puppet_agent::version","files":[{"name":"version_shell.sh","path":"/root/test/secure_linux_cis/.modules/puppet_agent/tasks/version_shell.sh","mtime":"2023-07-14 16:30:00 +0200"},{"name":"version_powershell.ps1","path":"/root/test/secure_linux_cis/.modules/puppet_agent/tasks/version_powershell.ps1","mtime":"2023-07-14 16:30:00 +0200"}],"metadata":{"description":"Get the version of the Puppet agent package installed. Returns nothing if none present.","parameters":{},"implementations":[{"name":"version_shell.sh","requirements":["shell"],"input_method":"environment"},{"name":"version_powershell.ps1","requirements":["powershell"]}]}},"puppet_conf":{"name":"puppet_conf","files":[{"name":"init.rb","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.27.1/modules/puppet_conf/tasks/init.rb","mtime":"2023-03-13 21:15:33 +0100"}],"metadata":{"description":"Inspect puppet agent configuration settings","input_method":"stdin","parameters":{"action":{"description":"The operation (get, set, delete) to perform on the configuration setting","type":"Enum[get, set, delete]"},"section":{"description":"The section of the config file. Defaults to main","type":"Optional[String[1]]"},"setting":{"description":"The name of the config entry to set/get","type":"String[1]"},"value":{"description":"The value you are setting. Only required for set","type":"Optional[String[1]]"}}}},"reboot":{"name":"reboot","files":[{"name":"init.rb","path":"/root/test/secure_linux_cis/.modules/reboot/tasks/init.rb","mtime":"2023-07-14 16:30:00 +0200"},{"name":"nix.sh","path":"/root/test/secure_linux_cis/.modules/reboot/tasks/nix.sh","mtime":"2023-07-14 16:30:00 +0200"},{"name":"win.ps1","path":"/root/test/secure_linux_cis/.modules/reboot/tasks/win.ps1","mtime":"2023-07-14 16:30:00 +0200"}],"metadata":{"description":"Reboots a machine","supports_noop":false,"input_method":"stdin","parameters":{"timeout":{"description":"Timeout before shutdown (seconds); enforces a minimum of 3s","type":"Optional[Variant[Pattern[/^[0-9]*$/],Integer]]"},"message":{"description":"Shutdown message for systems that support it","type":"Optional[Pattern[/^[^|&]*$/]]"},"shutdown_only":{"description":"Only shut the machine down, do not reboot","type":"Optional[Boolean]"}},"implementations":[{"name":"init.rb","requirements":["puppet-agent"]},{"name":"nix.sh","requirements":["shell"],"input_method":"environment"},{"name":"win.ps1","requirements":["powershell"],"input_method":"powershell"}]}},"reboot::last_boot_time":{"name":"reboot::last_boot_time","files":[{"name":"last_boot_time_nix.sh","path":"/root/test/secure_linux_cis/.modules/reboot/tasks/last_boot_time_nix.sh","mtime":"2023-07-14 16:30:00 +0200"},{"name":"last_boot_time_win.ps1","path":"/root/test/secure_linux_cis/.modules/reboot/tasks/last_boot_time_win.ps1","mtime":"2023-07-14 16:30:00 +0200"}],"metadata":{"description":"Gets the last boot time of a Linux or Windows system","implementations":[{"name":"last_boot_time_nix.sh","requirements":["shell"]},{"name":"last_boot_time_win.ps1","requirements":["powershell"]}]}},"service":{"name":"service","files":[{"name":"init.rb","path":"/root/test/secure_linux_cis/.modules/service/tasks/init.rb","mtime":"2023-07-14 16:30:02 +0200"},{"name":"windows.ps1","path":"/root/test/secure_linux_cis/.modules/service/tasks/windows.ps1","mtime":"2023-07-14 16:30:02 +0200"},{"name":"linux.sh","path":"/root/test/secure_linux_cis/.modules/service/tasks/linux.sh","mtime":"2023-07-14 16:30:02 +0200"},{"name":"service/files/common.sh","path":"/root/test/secure_linux_cis/.modules/service/files/common.sh","mtime":"2023-07-14 16:30:02 +0200"}],"metadata":{"description":"Manage and inspect the state of services","input_method":"stdin","parameters":{"action":{"description":"The operation (start, stop, restart, enable, disable, status) to perform on the service.","type":"Enum[start, stop, restart, enable, disable, status]"},"name":{"description":"The name of the service to operate on.","type":"String[1]"},"force":{"description":"Force a Windows service to restart even if it has dependent services. This parameter is passed for Windows services only.","type":"Optional[Boolean]"},"provider":{"description":"The provider to use to manage or inspect the service, defaults to the system service manager. Only used when the 'puppet-agent' feature is available on the target so we can leverage Puppet.","type":"Optional[String[1]]"}},"implementations":[{"name":"init.rb","requirements":["puppet-agent"]},{"name":"windows.ps1","requirements":["powershell"],"input_method":"powershell"},{"name":"linux.sh","requirements":["shell"],"input_method":"environment","files":["service/files/common.sh"]}],"extensions":{"discovery":{"friendlyName":"Manage service","type":["host"]}}}},"terraform::apply":{"name":"terraform::apply","files":[{"name":"apply.rb","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.27.1/modules/terraform/tasks/apply.rb","mtime":"2023-03-13 21:15:33 +0100"},{"name":"ruby_task_helper/files/task_helper.rb","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.27.1/modules/ruby_task_helper/files/task_helper.rb","mtime":"2023-03-13 21:15:33 +0100"},{"name":"terraform/lib/cli_helper.rb","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.27.1/modules/terraform/lib/cli_helper.rb","mtime":"2023-03-13 21:15:33 +0100"}],"metadata":{"description":"Apply an HCL manifest","files":["ruby_task_helper/files/task_helper.rb","terraform/lib/cli_helper.rb"],"input_method":"stdin","parameters":{"dir":{"type":"Optional[String[1]]","description":"Path to Terraform project directory. Path is relative to CWD, unless an absolute path is specified."},"state":{"type":"Optional[String[1]]","description":"Path to read and save state. Defaults to \"terraform.tfstate\". Path is relative to \"dir\""},"target":{"type":"Optional[Variant[String[1], Array[String[1]]]]","description":"Resource to target. Operation will be limited to this resource and its dependencies. Accepts a single resource string or an array of resources"},"var":{"type":"Optional[Hash]","description":"Set Terraform variables, expects a hash with key value pairs representing variables and values."},"var_file":{"type":"Optional[Variant[String[1], Array[String[1]]]]","description":"Set variables in the Terraform configuration from a file. Path is relative to \"dir\". Accepts a single var-file path or an array of paths"},"state_out":{"type":"Optional[String[1]]","description":"Path to write state to that is different than \"state\". This can be used to preserve the old state."}}}},"terraform::destroy":{"name":"terraform::destroy","files":[{"name":"destroy.rb","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.27.1/modules/terraform/tasks/destroy.rb","mtime":"2023-03-13 21:15:33 +0100"},{"name":"ruby_task_helper/files/task_helper.rb","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.27.1/modules/ruby_task_helper/files/task_helper.rb","mtime":"2023-03-13 21:15:33 +0100"},{"name":"terraform/lib/cli_helper.rb","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.27.1/modules/terraform/lib/cli_helper.rb","mtime":"2023-03-13 21:15:33 +0100"}],"metadata":{"description":"Destroy resources managed with Terraform","files":["ruby_task_helper/files/task_helper.rb","terraform/lib/cli_helper.rb"],"input_method":"stdin","parameters":{"dir":{"type":"Optional[String[1]]","description":"Path to Terraform project directory. Path is relative to CWD, unless an absolute path is specified."},"state":{"type":"Optional[String[1]]","description":"Path to read and save state. Defaults to \"terraform.tfstate\", Path is relative to \"dir\""},"target":{"type":"Optional[Variant[String[1], Array[String[1]]]]","description":"Resource to target. Operation will be limited to this resource and its dependencies. Accepts a single resource string or an array of resources"},"var":{"type":"Optional[Hash]","description":"Set Terraform variables, expects a hash with key value pairs representing variables and values."},"var_file":{"type":"Optional[Variant[String[1], Array[String[1]]]]","description":"Set variables in the Terraform configuration from a file. Path is relative to \"dir\". Accepts a single var-file path or an array of paths"},"state_out":{"type":"Optional[String[1]]","description":"Path to write state to that is different than \"state\". This can be used to preserve the old state."}}}},"terraform::initialize":{"name":"terraform::initialize","files":[{"name":"initialize.rb","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.27.1/modules/terraform/tasks/initialize.rb","mtime":"2023-03-13 21:15:33 +0100"},{"name":"ruby_task_helper/files/task_helper.rb","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.27.1/modules/ruby_task_helper/files/task_helper.rb","mtime":"2023-03-13 21:15:33 +0100"},{"name":"terraform/lib/cli_helper.rb","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.27.1/modules/terraform/lib/cli_helper.rb","mtime":"2023-03-13 21:15:33 +0100"}],"metadata":{"description":"Initialize a Terraform project directory","files":["ruby_task_helper/files/task_helper.rb","terraform/lib/cli_helper.rb"],"input_method":"stdin","parameters":{"dir":{"type":"Optional[String[1]]","description":"Path to Terraform project directory. Path is relative to CWD, unless an absolute path is specified."}}}},"terraform::output":{"name":"terraform::output","files":[{"name":"output.rb","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.27.1/modules/terraform/tasks/output.rb","mtime":"2023-03-13 21:15:33 +0100"},{"name":"ruby_task_helper/files/task_helper.rb","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.27.1/modules/ruby_task_helper/files/task_helper.rb","mtime":"2023-03-13 21:15:33 +0100"},{"name":"terraform/lib/cli_helper.rb","path":"/opt/puppetlabs/bolt/lib/ruby/gems/2.7.0/gems/bolt-3.27.1/modules/terraform/lib/cli_helper.rb","mtime":"2023-03-13 21:15:33 +0100"}],"metadata":{"description":"JSON representation of Terraform outputs","files":["ruby_task_helper/files/task_helper.rb","terraform/lib/cli_helper.rb"],"input_method":"stdin","parameters":{"dir":{"type":"Optional[String[1]]","description":"Path to Terraform project directory. Path is relative to CWD, unless an absolute path is specified."},"state":{"type":"Optional[String[1]]","description":"Path to read and save state. Defaults to \"terraform.tfstate\", Path is relative to \"dir\""}}}}}